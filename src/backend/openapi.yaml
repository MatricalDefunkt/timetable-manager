openapi: 3.1.0
info:
    title: Timetable Manager API specification
    description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
    version: 0.1.9
servers:
    - url: http://localhost:3000
      description: Optional server description, e.g. Main (production) server
paths:
    /users:
        get:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                200: # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /academicYears:
        get:
            summary: Get all academic years by userId.
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    academicYears:
                                        $ref: "#/components/schemas/AcademicYears"
                400:
                    $ref: "#/components/BadRequestError"
    /subjects:
        get:
            summary: Get all subjects by department and all multi-disciplinary subjects.
            parameters:
                - name: departmentId
                  in: query
                  required: true
                  description: ID of the department.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    subjects:
                                        $ref: "#/components/schemas/Subjects"
                400:
                    $ref: "#/components/BadRequestError"
    /classrooms:
        get:
            summary: Get all classrooms by academicYearId.
            parameters:
                - name: academicYearId
                  in: query
                  required: true
                  description: ID of the academic year.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    classrooms:
                                        $ref: "#/components/schemas/Classrooms"
                400:
                    $ref: "#/components/BadRequestError"
    /teachers:
        get:
            summary: Get all teachers by academicYearId.
            parameters:
                - name: academicYearId
                  in: query
                  required: true
                  description: ID of the academic year.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    teachers:
                                        $ref: "#/components/schemas/Teachers"
                400:
                    $ref: "#/components/BadRequestError"
    /subjectTeachers:
        get:
            summary: Get all teachers by subjectId.
            parameters:
                - name: subjectId
                  in: query
                  required: true
                  description: ID of the subject.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    teachers:
                                        $ref: "#/components/schemas/Teachers"
                400:
                    $ref: "#/components/BadRequestError"
    /batches:
        get:
            summary: Get all batches by academicYearId.
            parameters:
                - name: academicYearId
                  in: query
                  required: true
                  description: ID of the academic year.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    batches:
                                        $ref: "#/components/schemas/Batches"
                400:
                    $ref: "#/components/BadRequestError"
    /divisions:
        get:
            summary: Get all divisions by departmentId.
            parameters:
                - name: departmentId
                  in: query
                  required: true
                  description: ID of the department.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    divisions:
                                        $ref: "#/components/schemas/Divisions"
                400:
                    $ref: "#/components/BadRequestError"
    /departments:
        get:
            summary: Get all departments by batchId.
            parameters:
                - name: batchId
                  in: query
                  required: true
                  description: ID of the batch.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    departments:
                                        $ref: "#/components/schemas/Departments"
                400:
                    $ref: "#/components/BadRequestError"
    /subdivisionTimetable:
        get:
            summary: Get timetable information by subdivisionId.
    /divisionTimetable:
        get:
            summary: Get timetable information by divisionId.
    /teacherTimetable:
        get:
            summary: Get timetable information by teacherId.
    /classroomTimetable:
        get:
            summary: Get timetable information by classroomId.
    /availableTeachers:
        get:
            summary: Get all available teachers by slot ID and subject ID.
            parameters:
                - name: subjectId
                  in: query
                  required: true
                  description: ID of the subject.
                  schema:
                      type: number
                - name: slotId
                  in: query
                  required: true
                  description: ID of the slot.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    teachers:
                                        $ref: "#/components/schemas/Teachers"
                400:
                    $ref: "#/components/BadRequestError"
    /availableClassrooms:
        get:
            summary: Get all available classrooms by slot ID and subject ID.
            parameters:
                - name: subjectId
                  in: query
                  required: true
                  description: ID of the subject.
                  schema:
                      type: number
                - name: slotId
                  in: query
                  required: true
                  description: ID of the slot.
                  schema:
                      type: number
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    classrooms:
                                        $ref: "#/components/schemas/Classrooms"
                400:
                    $ref: "#/components/BadRequestError"
    # TODO: Add API information for add, update, delelte slotData.
components:
    BadRequestError:
        description: Bad request
        content:
            application/json:
                schema:
                    type: object
                    properties:
                        error:
                            type: object
                            properties:
                                message:
                                    type: string
    schemas:
        AcademicYears:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    year:
                        type: number
                    name:
                        type: string
        Batches:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    batchName:
                        type: string
                    AcademicYearId:
                        type: number
        Classrooms:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    classroomName:
                        type: string
                    AcademicYearId:
                        type: string
        Departments:
            type: array
            items:
                type: object
                properties:
                id:
                    type: number
                departmentName:
                    type: string
                BatchId:
                    type: number
        Divisions:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    divisionName:
                        type: string
                    DepartmentId:
                        type: number
        Groups:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    groupName:
                        type: string
                    AcademicYearId:
                        type: number
        Slots:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    day:
                        type: number
                    number:
                        type: number
                    AcademicYearId:
                        type: number
        Subdivisions:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    subdivisionName:
                        type: string
                    DivisionId:
                        type: number
        Subjects:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    subjectName:
                        type: string
                    isLab:
                        type: number
                    departmentId:
                        type: number
        Teachers:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: number
                    teacherName:
                        type: string
                    teacherEmail:
                        type: string
        Timetable:
            type: object
            properties:
        SlotData:
            type: object
            properties:
                id:
                    type: number
                slotId:
                    type: number
                subjectId:
                    type: number
                teacherId:
                    type: number
